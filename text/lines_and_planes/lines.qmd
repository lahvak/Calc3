---
title: Lines in 3d
format: html
layout: article
reference-location: margin
knitr:
  opts_chunk: 
    echo: false
---

{{< include ../_common.qmd >}}

## Linear motion

Good way to learn about lines in $\mathbb{R}^3$ is by studying trajectories of
uniformly moving objects.

```{r}
vembedr::embed_youtube("nw6zReJkJjs")
```

This 3d illustration shows a line with its _direction vector_ $\vec{v}$ through points $P$ and $Q$,
together with positions corresponding to times $t = -1$, $t=0$, $t=\frac{2}{3}$, $t=1$ and $t=2$:


```{r}
illustr("../../asymptote/lines_and_planes/line.html", title = "A line through P and Q", width=840, height=420)
```

## Equations of lines

From the idea of uniform motion of an object in $\mathbb{R}^3$, we obtain the __vector equation__ of a line:

$$\vec{r}(t) = \vec{r}_0 + t\vec{v}$$

where $\vec{r}(t)$ is the _position vector_ of the object at time $t$,
$\vec{r}_0$ is the _initial position_ of the object (in other words, the
position at $t=0$), and $\vec{v}$ is the _velocity_ vector of the moving
object.

If we split this equation into individual components, we get the __parametric
equations__ of the line:

$$
\left\{
\begin{aligned}
x(t) &= x_0 + v_1t\\
y(t) &= y_0 + v_2t\\
z(t) &= z_0 + v_3t
\end{aligned}
\right.
$$

where $x_0$, $y_0$ and $z_0$ are the components of the _initial position
vector_ $\vec{r}_0 = \v{x_0, y_0, z_0\}$.

Finally, we can solve for $t$ to get the __symmetric equation__ of the line:

```{r}
vembedr::embed_youtube("aN4LGicuH84")
```

### Try it yourself

```{r}
webwork(
        "Library/Union/setMVlinesplanes/lines-1.pg",
        width=640, height=500
)
```

```{r}
webwork(
        "Library/Dartmouth/setStewartCh13S5/problem_3.pg",
        width=640, height=500
)
```

```{r}
webwork(
        "Library/UMN/calculusStewartET/s_12_5_8.pg",
        width=640, height=500
)
```

```{r}
webwork(
        "Library/Union/setMVlinesplanes/lines-3.pg",
        width=640, height=500
)
```

### Direction vector

The direction (or velocity) vector will tell us the direction of the line.  If the direction
vectors of two lines are parallel, then the lines are either parallel, or they
are two different equations of the same line.

The components of the direction vector can tell us something about the line as
well.  For example:

-  If $v_1 = 0$, the line's distance from the $yz$-plane is constant, in other
  words, the line is _parallel_ to the $yz$-plane.  If $v_1 \neq 0$, the line is
  _not_ parallel to the $yz$-plane, and therefore must _intersect it_.

-  If $v_2 = 0$, the line's distance from the $xz$-plane is constant, in other
  words, the line is _parallel_ to the $xz$-plane.  If $v_2 \neq 0$, the line is
  _not_ parallel to the $xz$-plane, and therefore must _intersect it_.

-  If $v_3 = 0$, the line's distance from the $xy$-plane is constant, in other
  words, the line is _parallel_ to the $xy$-plane.  If $v_3 \neq 0$, the line is
  _not_ parallel to the $xy$-plane, and therefore must _intersect it_.

```{r}
vembedr::embed_youtube("dVNS0ku6ePg")
```

## Intersection of lines

Two examples of equations of intersecting lines:

```{r}
vembedr::embed_youtube("ZtCtTvTZGGg")
```

Examples of different ways how two lines can exist in $\mathbb{R}^3$:

```{r}
vembedr::embed_youtube("VqIhRqqmS1g")
```

Illustrations of intersecting and non-intersecting lines in $\mathbb{R}^3$:

```{r}
illustr("../../asymptote/lines_and_planes/intersecting.html", title = "Two intersecting lines", width=840, height=210)
```

```{r}
illustr("../../asymptote/lines_and_planes/skew.html", title = "Two non-intersecting lines", width=840, height=210)
```


### Try it yourself

```{r}
webwork(
        "Library/ASU-topics/setCalculus/stef12_5p3.pg",
        width=640, height=500
)
```

```{r}
webwork(
        "Library/Rochester/setVectors4PlanesLines/ur_vc_2_14.pg",
        width=640, height=500
)
```

## Distance of a point from a line

```{r}
vembedr::embed_youtube("YzcsN4f6sEQ")
```

### Try it yourself

```{r}
webwork(
        "Library/UMN/calculusStewartET/s_12_5_prob03.pg",
        width=640, height=500
)
```

